name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  freebsd-jail-test:
    runs-on: ubuntu-latest
    # Only run if secrets are configured
    if: ${{ secrets.FREEBSD_HOST != '' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible paramiko
    
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.FREEBSD_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "${{ secrets.FREEBSD_HOST_KEY }}" >> ~/.ssh/known_hosts
    
    - name: Create test inventory
      run: |
        cat > test-inventory.ini << 'EOF'
        [jails]
        testjail ansible_host=${{ secrets.FREEBSD_HOST }} ansible_user=${{ secrets.FREEBSD_USER }} ansible_connection=jailexec ansible_python_interpreter=/usr/local/bin/python3
        
        [jails:vars]
        ansible_ssh_private_key_file=~/.ssh/id_rsa
        ansible_ssh_common_args='-o StrictHostKeyChecking=yes'
        ansible_become_method=doas
        ansible_become=yes
        EOF
    
    - name: Enable IPv6 on runner
      run: |
        # GitHub runners don't have IPv6 by default, try to enable it
        sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
        sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0
        # Test if we can reach IPv6 addresses
        if ping6 -c 1 ipv6.google.com > /dev/null 2>&1; then
          echo "IPv6 connectivity available"
        else
          echo "::warning::IPv6 connectivity not available on this runner"
          echo "::notice::Consider using a self-hosted runner with IPv6 support or IPv4 connectivity to your FreeBSD host"
        fi
    
    - name: Test SSH connectivity to host
      run: |
        # Try to connect, but don't fail the whole workflow if unreachable
        if ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes -o ConnectTimeout=10 ${{ secrets.FREEBSD_USER }}@${{ secrets.FREEBSD_HOST }} "echo 'SSH connection successful'"; then
          echo "SSH_AVAILABLE=true" >> $GITHUB_ENV
        else
          echo "::warning::Cannot reach FreeBSD host from GitHub runner"
          echo "SSH_AVAILABLE=false" >> $GITHUB_ENV
        fi
      continue-on-error: true
    
    - name: Install connection plugin
      run: |
        mkdir -p ~/.ansible/plugins/connection
        cp jailexec.py ~/.ansible/plugins/connection/
    
    - name: Run smoke test playbook
      if: env.SSH_AVAILABLE == 'true'
      run: |
        ansible-playbook -i test-inventory.ini tests/integration/smoke-test.yml -v
      env:
        ANSIBLE_HOST_KEY_CHECKING: false
    
    - name: Skip notice
      if: env.SSH_AVAILABLE != 'true'
      run: |
        echo "::notice::Integration tests were skipped because the FreeBSD host is not reachable from this runner."
        echo "::notice::This is expected on GitHub-hosted runners without IPv6 support."
        echo "::notice::To run these tests, use a self-hosted runner with IPv6 connectivity or configure IPv4 access."
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: |
          test-inventory.ini
          ansible.log
        retention-days: 7